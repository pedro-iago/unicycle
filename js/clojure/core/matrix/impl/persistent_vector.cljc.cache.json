["^ ","~:rename-macros",["^ "],"~:renames",["^ "],"~:externs",["^ ","~$Array",["^ "]],"~:use-macros",["^ ","~$native-array?","~$clojure.core.matrix.macros-cljs","~$scalar-coerce","~$clojure.core.matrix.macros","~$vector-1d?","~$clojure.core.matrix.impl.persistent-vector","~$mapmatrix","~$clojure.core.matrix.impl.common","~$doseq-indexed","^8","~$error","^8"],"~:excludes",["~#set",[]],"~:name","^:","~:imports",null,"~:requires",["^ ","~$mp","~$clojure.core.matrix.protocols","^E","^E","~$imp","~$clojure.core.matrix.implementations","^G","^G","^<","^<","~$mops","~$clojure.core.matrix.impl.mathsops","^I","^I"],"~:uses",["^ ","^;","^<"],"~:defs",["^ ","~$persistent-vector-coerce",["^ ","~:protocol-inline",null,"~:meta",["^ ","~:file","/home/pedro/GitHub/unicycle/resources/public/js/clojure/core/matrix/impl/persistent_vector.cljc","~:line",92,"~:column",7,"~:end-line",92,"~:end-column",31,"~:arglists",["~#list",["~$quote",["^U",[["~$x"]]]]],"~:doc","Coerces to nested persistent vectors"],"^A","~$clojure.core.matrix.impl.persistent-vector/persistent-vector-coerce","~:variadic",false,"^O","resources/public/js/clojure/core/matrix/impl/persistent_vector.cljc","^S",31,"~:method-params",["^U",[["~$x"]]],"~:protocol-impl",null,"~:arglists-meta",["^U",[null,null]],"^Q",1,"^P",92,"^R",92,"~:max-fixed-arity",1,"~:fn-var",true,"^T",["^U",["^V",["^U",[["~$x"]]]]],"^W","Coerces to nested persistent vectors"],"~$coerce-nested",["^ ","^M",null,"^N",["^ ","^O","/home/pedro/GitHub/unicycle/resources/public/js/clojure/core/matrix/impl/persistent_vector.cljc","^P",47,"^Q",7,"^R",47,"^S",20,"^T",["^U",["^V",["^U",[["~$v"]]]]],"^W","Ensures a vector is fully coerced to nested persistent vectors"],"^A","~$clojure.core.matrix.impl.persistent-vector/coerce-nested","^Y",false,"^O","resources/public/js/clojure/core/matrix/impl/persistent_vector.cljc","^S",20,"^Z",["^U",[["~$v"]]],"^[",null,"^10",["^U",[null,null]],"^Q",1,"^P",47,"^R",47,"^11",1,"^12",true,"^T",["^U",["^V",["^U",[["~$v"]]]]],"^W","Ensures a vector is fully coerced to nested persistent vectors"],"~$mapv-identity-check",["^ ","^M",null,"^N",["^ ","^O","/home/pedro/GitHub/unicycle/resources/public/js/clojure/core/matrix/impl/persistent_vector.cljc","^P",60,"^Q",8,"^R",60,"^S",27,"~:private",true,"^T",["^U",["^V",["^U",[["~$f","~$v"]]]]],"^W","Maps a function over a persistent vector, only modifying the vector if the function\n   returns a different value"],"^16",true,"^A","~$clojure.core.matrix.impl.persistent-vector/mapv-identity-check","^Y",false,"^O","resources/public/js/clojure/core/matrix/impl/persistent_vector.cljc","^S",27,"^Z",["^U",[["~$f","~$v"]]],"^[",null,"^10",["^U",[null,null]],"^Q",1,"^P",60,"^R",60,"^11",2,"^12",true,"^T",["^U",["^V",["^U",[["~$f","~$v"]]]]],"^W","Maps a function over a persistent vector, only modifying the vector if the function\n   returns a different value"],"~$check-vector-shape",["^ ","^M",null,"^N",["^ ","^O","/home/pedro/GitHub/unicycle/resources/public/js/clojure/core/matrix/impl/persistent_vector.cljc","^P",72,"^Q",8,"^R",72,"^S",26,"^16",true,"^T",["^U",["^V",["^U",[["~$v","~$shape"]]]]]],"^16",true,"^A","~$clojure.core.matrix.impl.persistent-vector/check-vector-shape","^Y",false,"^O","resources/public/js/clojure/core/matrix/impl/persistent_vector.cljc","^S",26,"^Z",["^U",[["~$v","^19"]]],"^[",null,"^10",["^U",[null,null]],"^Q",1,"^P",72,"^R",72,"^11",2,"^12",true,"^T",["^U",["^V",["^U",[["~$v","^19"]]]]]],"~$is-nested-persistent-vectors?",["^ ","^M",null,"^N",["^ ","^O","/home/pedro/GitHub/unicycle/resources/public/js/clojure/core/matrix/impl/persistent_vector.cljc","^P",81,"^Q",7,"^R",81,"^S",36,"^T",["^U",["^V",["^U",[["~$x"]]]]],"^W","Test if array is already in nested persistent vector array format."],"^A","~$clojure.core.matrix.impl.persistent-vector/is-nested-persistent-vectors?","^Y",false,"^O","resources/public/js/clojure/core/matrix/impl/persistent_vector.cljc","^S",36,"^Z",["^U",[["~$x"]]],"^[",null,"^10",["^U",[null,null]],"^Q",1,"^P",81,"^R",81,"^11",1,"^12",true,"^T",["^U",["^V",["^U",[["~$x"]]]]],"^W","Test if array is already in nested persistent vector array format."],"~$vector-dimensionality",["^ ","^M",null,"^N",["^ ","^O","/home/pedro/GitHub/unicycle/resources/public/js/clojure/core/matrix/impl/persistent_vector.cljc","^P",110,"^Q",7,"^R",110,"^S",28,"^T",["^U",["^V",["^U",[["~$m"]]]]],"^W","Calculates the dimensionality (== nesting depth) of nested persistent vectors"],"^A","~$clojure.core.matrix.impl.persistent-vector/vector-dimensionality","^Y",false,"^O","resources/public/js/clojure/core/matrix/impl/persistent_vector.cljc","^S",28,"^Z",["^U",[["~$m"]]],"^[",null,"^10",["^U",[null,null]],"^Q",1,"^P",110,"^R",110,"^11",1,"^12",true,"^T",["^U",["^V",["^U",[["~$m"]]]]],"^W","Calculates the dimensionality (== nesting depth) of nested persistent vectors"],"~$build-maths-function",["^ ","^M",null,"^N",["^ ","^O","/home/pedro/GitHub/unicycle/resources/public/js/clojure/core/matrix/impl/persistent_vector.cljc","^P",484,"^Q",7,"^R",484,"^S",27,"^T",["^U",["^V",["^U",[[["~$name","~$func"]]]]]]],"^A","~$clojure.core.matrix.impl.persistent-vector/build-maths-function","^Y",false,"^O","resources/public/js/clojure/core/matrix/impl/persistent_vector.cljc","^S",27,"^Z",["^U",[["~$p__40607"]]],"^[",null,"^10",["^U",[null,null]],"^Q",1,"^P",484,"^R",484,"^11",1,"^12",true,"^T",["^U",["^V",["^U",[[["^1@","^1A"]]]]]]],"~$copy-to-double-array",["^ ","^M",null,"^N",["^ ","^O","/home/pedro/GitHub/unicycle/resources/public/js/clojure/core/matrix/impl/persistent_vector.cljc","^P",549,"^Q",8,"^R",549,"^S",28,"^16",true,"^T",["^U",["^V",["^U",[["~$m","~$arr","~$off","~$size"]]]]]],"^16",true,"^A","~$clojure.core.matrix.impl.persistent-vector/copy-to-double-array","^Y",false,"^O","resources/public/js/clojure/core/matrix/impl/persistent_vector.cljc","^S",28,"^Z",["^U",[["~$m","^1E","^1F","^1G"]]],"^[",null,"^10",["^U",[null,null]],"^Q",1,"^P",549,"^R",549,"^11",4,"^12",true,"^T",["^U",["^V",["^U",[["~$m","^1E","^1F","^1G"]]]]]],"~$copy-to-object-array",["^ ","^M",null,"^N",["^ ","^O","/home/pedro/GitHub/unicycle/resources/public/js/clojure/core/matrix/impl/persistent_vector.cljc","^P",585,"^Q",8,"^R",585,"^S",28,"^16",true,"^T",["^U",["^V",["^U",[["~$m","^1E","^1F","^1G"]]]]]],"^16",true,"^A","~$clojure.core.matrix.impl.persistent-vector/copy-to-object-array","^Y",false,"^O","resources/public/js/clojure/core/matrix/impl/persistent_vector.cljc","^S",28,"^Z",["^U",[["~$m","^1E","^1F","^1G"]]],"^[",null,"^10",["^U",[null,null]],"^Q",1,"^P",585,"^R",585,"^11",4,"^12",true,"^T",["^U",["^V",["^U",[["~$m","^1E","^1F","^1G"]]]]]]],"~:require-macros",["^ ","^:","^:","^8","^8","^6","^6","^H","^I","^I","^I"],"~:cljs.analyzer/constants",["^ ","~:seen",["^@",["~$clojure.core.matrix.impl.common/mapmatrix","~:else","~:default","~:persistent-vector","~$m","~$cljs.core/double","~$cljs.core/fn","^W","~$x__40606__auto__"]],"~:order",["^1O","^1P","^1Q","^W","~$m","^1N","^1S","^1T","^1R"]],"^W","Namespace for core.matrix implementation using nested persistent vectors.\n\n   Array format is defined as:\n   - Top level object is an instance of clojure.lang.IPersistentVector\n   - If the array is 1-dimensional each element is a scalar\n   - Otherwise each element is an sub-array with identical shape (1 dimensional or more)\n\n   Note that this allows for other array implementations to be nested inside persistent vectors."]