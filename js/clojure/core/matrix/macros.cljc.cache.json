["^ ","~:rename-macros",["^ "],"~:renames",["^ "],"~:externs",["^ ","~$Array",["^ "]],"~:use-macros",["^ "],"~:excludes",["~#set",["~$array?"]],"~:name","~$clojure.core.matrix.macros","~:imports",null,"~:requires",null,"~:uses",null,"~:defs",["^ ","~$is-double-array?",["^ ","~:protocol-inline",null,"~:meta",["^ ","~:file","/home/pedro/GitHub/unicycle/resources/public/js/clojure/core/matrix/macros.cljc","~:line",62,"~:column",11,"~:end-line",62,"~:end-column",27,"~:macro",true,"~:arglists",["~#list",["~$quote",["^H",[["~$m"]]]]]],"^8","~$clojure.core.matrix.macros/is-double-array?","~:variadic",false,"^A","resources/public/js/clojure/core/matrix/macros.cljc","^E",27,"~:method-params",["^H",[["~$&form","~$&env","~$m"]]],"~:protocol-impl",null,"~:arglists-meta",["^H",[null,null]],"^C",1,"^B",62,"^F",true,"^D",62,"~:max-fixed-arity",3,"~:fn-var",false,"^G",["^H",["^I",["^H",[["~$m"]]]]]],"~$is-long-array?",["^ ","^?",null,"^@",["^ ","^A","/home/pedro/GitHub/unicycle/resources/public/js/clojure/core/matrix/macros.cljc","^B",58,"^C",11,"^D",58,"^E",25,"^F",true,"^G",["^H",["^I",["^H",[["~$m"]]]]]],"^8","~$clojure.core.matrix.macros/is-long-array?","^K",false,"^A","resources/public/js/clojure/core/matrix/macros.cljc","^E",25,"^L",["^H",[["^M","^N","~$m"]]],"^O",null,"^P",["^H",[null,null]],"^C",1,"^B",58,"^F",true,"^D",58,"^Q",3,"^R",false,"^G",["^H",["^I",["^H",[["~$m"]]]]]],"~$iae-when-not",["^ ","^?",null,"^@",["^ ","^A","/home/pedro/GitHub/unicycle/resources/public/js/clojure/core/matrix/macros.cljc","^B",37,"^C",11,"^D",37,"^E",23,"^F",true,"^G",["^H",["^I",["^H",[["~$pred?","~$exception-str"]]]]],"~:doc","Throws an IllegalArgumentException when the predicate is not satisfied"],"^8","~$clojure.core.matrix.macros/iae-when-not","^K",false,"^A","resources/public/js/clojure/core/matrix/macros.cljc","^E",23,"^L",["^H",[["^M","^N","^V","^W"]]],"^O",null,"^P",["^H",[null,null]],"^C",1,"^B",37,"^F",true,"^D",37,"^Q",4,"^R",false,"^G",["^H",["^I",["^H",[["^V","^W"]]]]],"^X","Throws an IllegalArgumentException when the predicate is not satisfied"],"~$c-for",["^ ","^?",null,"^@",["^ ","^A","/home/pedro/GitHub/unicycle/resources/public/js/clojure/core/matrix/macros.cljc","^B",66,"^C",11,"^D",66,"^E",16,"^F",true,"^G",["^H",["^I",["^H",[["~$loops","~$&","~$body"]]]]],"^X","C-like loop with nested loops support","~:top-fn",["^ ","^K",true,"^Q",3,"^L",[["^H",["^M","^N","^[","^10"]]],"^G",["^H",[["^M","^N","^[","~$&","^10"]]],"^P",["^H",[null]]]],"^8","~$clojure.core.matrix.macros/c-for","^K",true,"^A","resources/public/js/clojure/core/matrix/macros.cljc","^E",16,"^11",["^ ","^K",true,"^Q",3,"^L",[["^H",["^M","^N","^[","^10"]]],"^G",["^H",[["^M","^N","^[","~$&","^10"]]],"^P",["^H",[null]]],"^L",[["^H",["^M","^N","^[","^10"]]],"^O",null,"^P",["^H",[null]],"^C",1,"^B",66,"^F",true,"^D",66,"^Q",3,"^R",false,"^G",["^H",[["^M","^N","^[","~$&","^10"]]],"^X","C-like loop with nested loops support"],"~$scalar-coerce",["^ ","^?",null,"^@",["^ ","^A","/home/pedro/GitHub/unicycle/resources/public/js/clojure/core/matrix/macros.cljc","^B",79,"^C",11,"^D",79,"^E",24,"^F",true,"^G",["^H",["^I",["^H",[["~$x"]]]]],"^X","Macro to coerce to scalar value with an efficient dispatch sequence"],"^8","~$clojure.core.matrix.macros/scalar-coerce","^K",false,"^A","resources/public/js/clojure/core/matrix/macros.cljc","^E",24,"^L",["^H",[["^M","^N","~$x"]]],"^O",null,"^P",["^H",[null,null]],"^C",1,"^B",79,"^F",true,"^D",79,"^Q",3,"^R",false,"^G",["^H",["^I",["^H",[["~$x"]]]]],"^X","Macro to coerce to scalar value with an efficient dispatch sequence"],"~$iae",["^ ","^?",null,"^@",["^ ","^A","/home/pedro/GitHub/unicycle/resources/public/js/clojure/core/matrix/macros.cljc","^B",32,"^C",11,"^D",32,"^E",14,"^F",true,"^G",["^H",["^I",["^H",[["^W"]]]]],"^X","Throws IllegalArgumentException with provided string"],"^8","~$clojure.core.matrix.macros/iae","^K",false,"^A","resources/public/js/clojure/core/matrix/macros.cljc","^E",14,"^L",["^H",[["^M","^N","^W"]]],"^O",null,"^P",["^H",[null,null]],"^C",1,"^B",32,"^F",true,"^D",32,"^Q",3,"^R",false,"^G",["^H",["^I",["^H",[["^W"]]]]],"^X","Throws IllegalArgumentException with provided string"],"~$doseq-indexed",["^ ","^?",null,"^@",["^ ","^A","/home/pedro/GitHub/unicycle/resources/public/js/clojure/core/matrix/macros.cljc","^B",43,"^C",11,"^D",43,"^E",24,"^F",true,"^G",["^H",["^I",["^H",[[["~$val-sym","~$values","~$index-sym"],"~$&","~$code"]]]]],"^X","loops over a set of values, binding index-sym to the 0-based index of each value","^11",["^ ","^K",true,"^Q",3,"^L",[["^H",["^M","^N",["^18","^19","^1:"],"^1;"]]],"^G",["^H",[["^M","^N",["^18","^19","^1:"],"~$&","^1;"]]],"^P",["^H",[null]]]],"^8","~$clojure.core.matrix.macros/doseq-indexed","^K",true,"^A","resources/public/js/clojure/core/matrix/macros.cljc","^E",24,"^11",["^ ","^K",true,"^Q",3,"^L",[["^H",["^M","^N",["^18","^19","^1:"],"^1;"]]],"^G",["^H",[["^M","^N",["^18","^19","^1:"],"~$&","^1;"]]],"^P",["^H",[null]]],"^L",[["^H",["^M","^N",["^18","^19","^1:"],"^1;"]]],"^O",null,"^P",["^H",[null]],"^C",1,"^B",43,"^F",true,"^D",43,"^Q",3,"^R",false,"^G",["^H",[["^M","^N",["^18","^19","^1:"],"~$&","^1;"]]],"^X","loops over a set of values, binding index-sym to the 0-based index of each value"],"^7",["^ ","^?",null,"^@",["^ ","^A","/home/pedro/GitHub/unicycle/resources/public/js/clojure/core/matrix/macros.cljc","^B",87,"^C",11,"^D",87,"^E",17,"^F",true,"^G",["^H",["^I",["^H",[["~$m"]]]]],"^X","Returns true if the parameter is an N-dimensional array of any type"],"^8","~$clojure.core.matrix.macros/array?","^K",false,"^A","resources/public/js/clojure/core/matrix/macros.cljc","^E",17,"^L",["^H",[["^M","^N","~$m"]]],"^O",null,"^P",["^H",[null,null]],"^C",1,"^B",87,"^F",true,"^D",87,"^Q",3,"^R",false,"^G",["^H",["^I",["^H",[["~$m"]]]]],"^X","Returns true if the parameter is an N-dimensional array of any type"],"~$TODO",["^ ","^?",null,"^@",["^ ","^A","/home/pedro/GitHub/unicycle/resources/public/js/clojure/core/matrix/macros.cljc","^B",28,"^C",11,"^D",28,"^E",15,"^F",true,"^G",["^H",["^I",["^H",[[],["~$&","~$vals"]]]]],"^11",["^ ","^K",true,"^Q",2,"^L",["^H",[["^M","^N"]]],"^G",["^H",[["^M","^N"],["^M","^N","~$&","^1?"]]],"^P",["^H",[null,null]]]],"^8","~$clojure.core.matrix.macros/TODO","^K",true,"^A","resources/public/js/clojure/core/matrix/macros.cljc","^E",15,"^11",["^ ","^K",true,"^Q",2,"^L",["^H",[["^M","^N"]]],"^G",["^H",[["^M","^N"],["^M","^N","~$&","^1?"]]],"^P",["^H",[null,null]]],"^L",["^H",[["^M","^N"]]],"^O",null,"^P",["^H",[null,null]],"^C",1,"^B",28,"^F",true,"^D",28,"^Q",2,"^R",false,"^G",["^H",[["^M","^N"],["^M","^N","~$&","^1?"]]]],"~$error",["^ ","^?",null,"^@",["^ ","^A","/home/pedro/GitHub/unicycle/resources/public/js/clojure/core/matrix/macros.cljc","^B",6,"^C",11,"^D",6,"^E",16,"^F",true,"^G",["^H",["^I",["^H",[["~$&","^1?"]]]]],"^X","Throws an error with the provided message(s)","^11",["^ ","^K",true,"^Q",2,"^L",[["^H",["^M","^N","^1?"]]],"^G",["^H",[["^M","^N","~$&","^1?"]]],"^P",["^H",[null]]]],"^8","~$clojure.core.matrix.macros/error","^K",true,"^A","resources/public/js/clojure/core/matrix/macros.cljc","^E",16,"^11",["^ ","^K",true,"^Q",2,"^L",[["^H",["^M","^N","^1?"]]],"^G",["^H",[["^M","^N","~$&","^1?"]]],"^P",["^H",[null]]],"^L",[["^H",["^M","^N","^1?"]]],"^O",null,"^P",["^H",[null]],"^C",1,"^B",6,"^F",true,"^D",6,"^Q",2,"^R",false,"^G",["^H",[["^M","^N","~$&","^1?"]]],"^X","Throws an error with the provided message(s)"],"~$is-object-array?",["^ ","^?",null,"^@",["^ ","^A","/home/pedro/GitHub/unicycle/resources/public/js/clojure/core/matrix/macros.cljc","^B",54,"^C",11,"^D",54,"^E",27,"^F",true,"^G",["^H",["^I",["^H",[["~$m"]]]]]],"^8","~$clojure.core.matrix.macros/is-object-array?","^K",false,"^A","resources/public/js/clojure/core/matrix/macros.cljc","^E",27,"^L",["^H",[["^M","^N","~$m"]]],"^O",null,"^P",["^H",[null,null]],"^C",1,"^B",54,"^F",true,"^D",54,"^Q",3,"^R",false,"^G",["^H",["^I",["^H",[["~$m"]]]]]]],"~:require-macros",null,"~:cljs.analyzer/constants",["^ ","~:seen",["^6",["~$clojure.core.matrix.protocols/get-0d","~$cljs.core/str","~$clojure.core.matrix.protocols/is-scalar?","~$cljs.core/when","~$cljs.core/=","^16","~:else","~$cljs.core/seq","~$cljs.core/when-not","~$do","^1B","~$if","~$vals__30449__auto__","~$cljs.core/let","~$cljs.core/number?","~$cljs.core/long","~$cljs.core/cond","~$js/Array","~$cljs.core/loop","~$recur","~$cljs.core/ex-info","~$cljs.core/next","~$cljs.core/not","~$x__30970__auto__","~$cljs.core/first","~$throw","~$cljs.core/type","~$cljs.core/inc","~$IllegalArgumentException."]],"~:order",["^23","^1Z","^1I","^1B","^26","^1O","^16","^1X","^1R","^1N","^1U","^1Q","^1S","^22","^1Y","^1[","^25","^1L","^1W","^24","^1K","^1P","^21","^1V","^1T","^1M","^1H","^20","^1J"]],"^X","Namespace for core.matrix macros. Keeping them separate allows us to do conditional\n  macros that can handle the differences between Clojure and Clojurescript."]